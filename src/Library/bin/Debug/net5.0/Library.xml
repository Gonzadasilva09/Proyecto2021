<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Library</name>
    </assembly>
    <members>
        <member name="T:Telegram.Offer">
            <summary>
            Clase que se encarga de controlar las ofertas.
            </summary>
        </member>
        <member name="F:Telegram.Offer.categories">
            <summary>
            Lista que contiene las categorias de la oferta.
            </summary>
            <typeparam name="Category"></typeparam>
            <returns></returns>
        </member>
        <member name="F:Telegram.Offer.Ratings">
            <summary>
            Lista que contiene las habilitaciones de la oferta.
            </summary>
            <typeparam name="Ratings"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Telegram.Offer.Recurrent">
            <summary>
            Atributo que determina si la oferta es recurrente o no, obtiene y establece el valor.
            </summary>
            <value></value>
        </member>
        <member name="P:Telegram.Offer.Type">
            <summary>
            Establece o obtiene el tipo de la oferta, que puede ser residuo o material.
            </summary>
            <value></value>
        </member>
        <member name="P:Telegram.Offer.Product">
            <summary>
            Obtiene y establece el material ofrecido en la oferta.
            </summary>
            <value></value>
        </member>
        <member name="P:Telegram.Offer.status">
            <summary>
            Obtiene o establece el atributo que determina si la oferta esta disponible o no.
            </summary>
            <value></value>
        </member>
        <member name="P:Telegram.Offer.Owner">
            <summary>
            Obtiene o establece el dueño de la ofterta.
            </summary>
            <value></value>
        </member>
        <member name="M:Telegram.Offer.#ctor(Telegram.Ratings,Telegram.Category,System.String,System.String,System.Int32,Telegram.Units,System.String,System.Int32)">
            <summary>
            Constructor de objetos de tipo oferta.
            </summary>
            <param name="ratings"></param>
            <param name="categories"></param>
            <param name="type"></param>
            <param name="prodname"></param>
            <param name="prodquantity"></param>
            <param name="produnit"></param>
            <param name="proddirection"></param>
            <param name="prodprice"></param>
        </member>
        <member name="M:Telegram.Offer.printOffer">
            <summary>
            Metodo que imprime una oferta en la consola.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telegram.Ratings">
            <summary>
            Clase encargada de controlar las habilitaciones.
            </summary>
        </member>
        <member name="F:Telegram.Ratings.Listratings">
            <summary>
            Lista que contiene todas las habilitaciones disponibles.
            </summary>
            <typeparam name="Ratings">Las habilitaciones en si.</typeparam>
            <returns></returns>
        </member>
        <member name="P:Telegram.Ratings.Description">
            <summary>
            Obtiene o establece una descripcion de la habilitación.
            </summary>
            <value></value>
        </member>
        <member name="P:Telegram.Ratings.Name">
            <summary>
            Obtiene o establece el nombre de una habilitacion.
            </summary>
            <value></value>
        </member>
        <member name="M:Telegram.Ratings.#ctor(System.String,System.String)">
            <summary>
            Creador de habilitaciones.
            </summary>
            <param name="description"></param>
            <param name="name"></param>
        </member>
        <member name="M:Telegram.Ratings.addRatings">
            <summary>
            Metodo que añade habilitaciones nuevas a la lista.
            </summary>
        </member>
        <member name="T:Telegram.Rubro">
            <summary>
            Clase encargada de crear y obtener los distintos rubros disponibles.
            </summary>
        </member>
        <member name="F:Telegram.Rubro.Listrubro">
            <summary>
            Lista que almacena todos los rubros disponibles.
            </summary>
            <typeparam name="Rubro"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Telegram.Rubro.Description">
            <summary>
            String que obtiene o establece la descripción de un rubro.
            </summary>
            <value></value>
        </member>
        <member name="P:Telegram.Rubro.Name">
            <summary>
            String que obtiene o establece el nombre de un rubro.
            </summary>
            <value></value>
        </member>
        <member name="M:Telegram.Rubro.#ctor(System.String,System.String)">
            <summary>
            Constructor de rubros.
            </summary>
            <param name="description"></param>
            <param name="name"></param>
        </member>
        <member name="M:Telegram.Rubro.addRubro">
            <summary>
            Añade rubros nuevos a la lista de rubros.
            </summary>
        </member>
        <member name="T:Telegram.Units">
            <summary>
            Clase que se encarga de las unidades de magnitud para las ofertas.
            </summary>
        </member>
        <member name="F:Telegram.Units.Unitlist">
            <summary>
            Lista que contiene todas las unidades disponibles para usar.
            </summary>
            <typeparam name="Units"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Telegram.Units.Name">
            <summary>
            Obtiene el nombre de la unidad.
            </summary>
            <value></value>
        </member>
        <member name="F:Telegram.Units.shortcut">
            <summary>
            Abreviacion de la unidad.
            </summary>
        </member>
        <member name="M:Telegram.Units.#ctor(System.String)">
            <summary>
            Creador de los objetos Unit.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Telegram.Units.shortcutget(System.Int32)">
            <summary>
            Transforma las unidades a su abreviacion.
            </summary>
            <param name="unitnum"></param>
            <returns></returns>
        </member>
        <member name="M:Telegram.Units.AddUnit(Telegram.Units)">
            <summary>
            Metodo para añadir unidades a la lista.
            </summary>
            <param name="unit"></param>
        </member>
        <member name="M:Telegram.Units.Deleteunit(Telegram.Units)">
            <summary>
            Metodo para eliminar unidades de la lista.
            </summary>
            <param name="unit"></param>
        </member>
        <member name="M:Telegram.Units.PrintList">
            <summary>
            Metodo para imprimir la lista en la consola.
            </summary>
        </member>
        <member name="T:Telegram.User">
            <summary>
            La clase User es una clase abstracta para heredar caracteristicas a la clase Business y la clase Emprendedores.
            </summary>
        </member>
        <member name="P:Telegram.User.Name">
            <summary>
            Obtiene o establece el nombre de un usuario.
            </summary>
            <value></value>
        </member>
        <member name="P:Telegram.User.Location">
            <summary>
            Obtiene o establece la locacion de un usuario.
            </summary>
            <value></value>
        </member>
        <member name="P:Telegram.User.Rubro">
            <summary>
            Obtiene o establece el rubro de un usuario.
            </summary>
            <value></value>
        </member>
        <member name="M:Telegram.User.#ctor(System.String,System.String,Telegram.Rubro)">
            <summary>
            Constructor de la clase abstracta usuario.
            </summary>
            <param name="name"></param>
            <param name="location"></param>
            <param name="rubro"></param>
        </member>
    </members>
</doc>
